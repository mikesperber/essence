# This is pathetically large for such a small package.
# Go figure.

SHELL = /bin/sh

srcdir = @srcdir@
VPATH = @srcdir@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
sharedir = $(prefix)/share
incdir = $(prefix)/include
docdir = $(prefix)/doc
manext = 1
mandir = $(prefix)/man/man$(manext)
htmldir = $(prefix)/html

TEMPDIR = /tmp
distdir = /tmp

RUNNABLE = essence
MINOR_VERSION_NUMBER = 2

TAR = tar
ZCAT = zcat
GZIP = gzip
LATEX = latex
BIBTEX = bibtex
HYPERLATEX = hyperlatex
SCHEME48 = scheme48

PGG_DIRECTORY = ../cps-mcogen
PGG_PACKAGES = $(PGG_DIRECTORY)/genext-packages.scm \
	$(PGG_DIRECTORY)/pgg-packages.scm
GENEXT_BASE = genext
GENEXT_VERSION = 1.3
GENEXT_DIRECTORY = genext
GENEXT_PACKAGES = $(GENEXT_DIRECTORY)/genext-packages.scm
PGG_HEAPSIZE = 8000000
GENEXT_HEAPSIZE = 16000000

# In theory, you can change this:
LOOKAHEAD_SOURCE = src/lookahead-trie.scm

PARSER_SOURCE_FILES = \
	src/cps-lr.scm

PARSER_GENEXT_SUPPORT_SOURCE_FILES = \
	src/the-trick.scm \
	$(LOOKAHEAD_SOURCE) \
	src/pure.scm \
	src/memo.scm

PARSER_SUPPORT_SOURCE_FILES = \
	src/grammar.scm \
	src/scc-union.scm \
	src/cogen-directives.scm \
	src/defdata.scm \
	src/lr-spectime.scm

BATCH_SUPPORT_SOURCE_FILES = \
	src/command-line.scm \
	src/main.scm

PARSER_CONFIG_FILES = \
	interfaces.scm \
	packages.scm

PARSER_GENEXT_SOURCE_FILES = \
	src/essence-cps-lr-genext.scm

PARSER_GENEXT_CONFIG_FILES = \
	$(PARSER_CONFIG_FILES) \
	src/essence-cps-lr-genext.config.scm \
	generator-packages.scm

PARSER_SHARE_DIRECTORIES = \
	src \
	$(GENEXT_DIRECTORY)

PARSER_ALL_SOURCE_FILES = \
	$(PARSER_SUPPORT_SOURCE_FILES) \
	$(PARSER_GENEXT_SOURCE_FILES) \
	$(PARSER_GENEXT_CONFIG_FILES) \
	$(PARSER_GENEXT_SUPPORT_SOURCE_FILES) \
	$(BATCH_SUPPORT_SOURCE_FILES) \
	$(PARSER_SOURCE_FILES) \
	$(GENEXT_DIRECTORY)/*

PARSER_DOC_FILES = \
	COPYING README INSTALL \
	doc/essence.tex doc/essence.bbl doc/essence.ps \
	doc/html/*.html doc/html/icons/*.xbm \
	doc/$(RUNNABLE).man

PARSER_EXAMPLE_FILES = \
	examples/toy-grammars.scm \
	examples/toy-inputs.scm

PARSER_DIST_FILES = \
	$(PARSER_ALL_SOURCE_FILES) \
	configure configure.in install-sh \
	Makefile.in \
	$(PARSER_DOC_FILES) \
	$(PARSER_EXAMPLE_FILES) \
	$(PARSER_GENEXT_SUPPORT_SOURCE_FILES)

IMAGE = essence.image

BATCH_IMAGE = essence-batch.image

default: $(RUNNABLE)

install: install-directories install-script install-share install-images \
	install-documentation

install-images: install-image install-batch

install-share:
	for f in $(PARSER_SOURCE_FILES); do 				\
		$(INSTALL_DATA)  $$f $(sharedir)/$$f || exit 1;		\
	done &&								\
	for f in $(PARSER_ALL_SOURCE_FILES); do 			\
		$(INSTALL_DATA)  $$f $(sharedir)/$$f || exit 1;		\
	done

install-script:
	script=$(bindir)/$(RUNNABLE) &&					\
	echo '#!/bin/sh'	>$$script &&				\
	echo 'exec $(SCHEME48) -i $(libdir)/$(BATCH_IMAGE) -h $(GENEXT_HEAPSIZE) -a $$@' \
	     >>$$script &&						\
	chmod +x $$script

$(RUNNABLE): batch
	script=$(RUNNABLE) &&						\
	echo '#!/bin/sh'	>$$script &&				\
	echo "lib=`pwd`"	>>$$script &&				\
	echo 'exec $(SCHEME48) -i $$lib/$(BATCH_IMAGE) -h $(GENEXT_HEAPSIZE) -a $$@' \
	     >>$$script &&						\
	chmod +x $$script

install-documentation: documentation
	$(INSTALL_DATA) doc/$(RUNNABLE).man $(mandir)/$(RUNNABLE).$(manext)
	$(INSTALL_DATA) doc/essence.ps $(docdir)
	cd doc/html; 							\
	for f in *.html; do						\
		$(INSTALL_DATA) $$f $(htmldir);				\
	done
	mkdir -p $(htmldir)/icons &&					\
	cd doc/html/icons;						\
	for f in *.xbm; do						\
		$(INSTALL_DATA) $$f $(htmldir)/icons;			\
	done

install-directories:
	mkdir -p $(prefix) &&						\
	mkdir -p $(exec_prefix) &&					\
	mkdir -p $(bindir) &&						\
	mkdir -p $(libdir) &&						\
	mkdir -p $(sharedir) &&						\
	mkdir -p $(mandir) &&						\
	mkdir -p $(docdir) &&						\
	mkdir -p $(htmldir) &&						\
	for f in $(PARSER_SHARE_DIRECTORIES); do			\
		mkdir -p $(sharedir)/$$f || exit 1;			\
	done &&								\
	mkdir -p $(incdir)

configure: configure.in
	autoconf

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./configure

clean:
	rm -f $(BATCH_IMAGE) $(IMAGE)
	rm -f $(RUNNABLE)
	rm -f doc/*.aux doc/*.dvi -f doc/*.log

distclean: clean
	rm -f Makefile
	rm -f config.status config.cache config.log

pristine: distclean
	rm -f configure
	rm -f src/essence-cps-lr-genext.scm src/essence-cps-lr-genext.config.scm 
	rm -rf $(GENEXT_DIRECTORY)
	rm -f doc/essence.ps doc/essence.bbl doc/essence/html/*.html

batch: $(BATCH_IMAGE)

$(BATCH_IMAGE): $(IMAGE) \
	src/main.scm
	(echo ',batch on';						\
	 echo ",open essence-cps-lr-parser-generator";	\
	 echo ",build main $(BATCH_IMAGE)";				\
	 echo ',exit'							\
	)  | $(SCHEME48) -h $(GENEXT_HEAPSIZE) -i $(IMAGE)

install-batch:
	rm -f $(TEMPDIR)/$(BATCH_IMAGE) &&				\
	(echo ',batch on';						\
	 echo ",open essence-cps-lr-parser-generator";	\
	 echo ",build main $(TEMPDIR)/$(BATCH_IMAGE)";			\
	 echo ',exit'							\
	)  | $(SCHEME48) -h $(GENEXT_HEAPSIZE) -i $(libdir)/$(IMAGE) &&	\
	$(INSTALL_DATA) $(TEMPDIR)/$(BATCH_IMAGE) $(libdir) &&		\
	rm $(TEMPDIR)/$(BATCH_IMAGE)

image: $(IMAGE)

$(IMAGE): import-genext \
	src/essence-cps-lr-genext.scm src/essence-cps-lr-genext.config.scm \
	$(PARSER_GENEXT_CONFIG_FILES)
	(echo ',batch on';						\
	 echo ",translate =essence/ `pwd`/";				\
	 for config in $(GENEXT_PACKAGES); do				\
		echo ",config ,load =essence/$$config";			\
	 done;								\
	 for config in $(PARSER_GENEXT_CONFIG_FILES); do		\
		echo ",config ,load =essence/$$config";			\
	 done;								\
	 echo ",load-package essence-cps-lr";		\
	 echo ",load-package essence-cps-lr-generate";	\
	 echo ",dump $(IMAGE) \"$(distname)\"";				\
	 echo ',exit'							\
	) | $(SCHEME48) -h $(GENEXT_HEAPSIZE)

install-image: genext \
	$(PARSER_GENEXT_CONFIG_FILES)
	rm -f $(TEMPDIR)/$(IMAGE) &&					\
	(echo ',batch on';						\
	 echo ",translate =essence/ `pwd`/";				\
	 for config in $(GENEXT_PACKAGES); do				\
		echo ",config ,load =essence/$$config";			\
	 done;								\
	 for config in $(PARSER_GENEXT_CONFIG_FILES); do		\
		echo ",config ,load =essence/$$config";			\
	 done;								\
	 echo ",load-package essence-cps-lr";		\
	 echo ",load-package essence-cps-lr-generate";	\
	 echo ",translate =essence/ $(sharedir)/";			\
	 echo ",dump $(TEMPDIR)/$(IMAGE) \"$(distname)\"";		\
	 echo ',exit'							\
	) | $(SCHEME48) -h $(GENEXT_HEAPSIZE) &&			\
	$(INSTALL_DATA) $(TEMPDIR)/$(IMAGE) $(libdir) &&		\
	rm $(TEMPDIR)/$(IMAGE)

genext: src/essence-cps-lr-genext.scm src/essence-cps-lr-genext.config.scm

src/essence-cps-lr-genext.scm src/essence-cps-lr-genext.config.scm: \
	$(PARSER_SOURCE_FILES) \
	$(PARSER_GENEXT_SUPPORT_SOURCE_FILES) \
	$(PARSER_SUPPORT_SOURCE_FILES)
	(echo ",config ,load $(PGG_PACKAGES)";	\
	 echo ',batch on';						\
	 echo ',open pgg';						\
	 echo ',open cogen-globals';					\
	 echo ',batch off';						\
	 echo "(begin							\
                 (cogen-driver '(\"src/cps-lr.scm\"			\
		  \"src/the-trick.scm\"				\
		  \"$(LOOKAHEAD_SOURCE)\"				\
		  \"src/pure.scm\"					\
		  \"src/memo.scm\")					\
	          '(parse 0 0 0 0 1)					\
	          '(goal compute-parser)				\
	          '(open signals					\
		         essence-grammars essence-lr-spectime)		\
	          \"src/essence-cps-lr-genext.scm\")		\
	         #t)";							\
	 echo ',exit'							\
	) | $(SCHEME48) -h $(PGG_HEAPSIZE)

documentation: doc/essence.ps doc/html/essence.html

doc/essence.bbl:
	cd doc; $(LATEX) essence; $(BIBTEX) essence

doc/essence.dvi: doc/essence.tex doc/essence.bbl
	cd doc; $(LATEX) essence; $(LATEX) essence

doc/essence.ps: doc/essence.dvi
	cd doc; dvips essence

doc/html/essence.html: doc/essence.tex
	cd doc; $(HYPERLATEX) essence

import-genext:
	rm -rf $(GENEXT_DIRECTORY)
	cd $(PGG_DIRECTORY) &&						\
	$(MAKE) $(GENEXT_BASE)-$(GENEXT_VERSION).tar.gz
	mkdir $(GENEXT_DIRECTORY) &&					\
	$(ZCAT) $(PGG_DIRECTORY)/$(GENEXT_BASE)-$(GENEXT_VERSION).tar.gz\
	| (cd $(GENEXT_DIRECTORY); $(TAR) xvf -)

distname = $(RUNNABLE)-1.$(MINOR_VERSION_NUMBER)

dist: import-genext \
	configure Makefile \
	src/essence-cps-lr-genext.scm src/essence-cps-lr-genext.config.scm \
	doc/essence.ps doc/html/essence.html
	distname=$(distname) &&						\
	distfile=$(distdir)/$$distname.tar.gz &&			\
	if [ -d $(distdir) ] &&						\
	   [ -w $$distfile -o -w $(distdir) ]; then			\
		rm -f $$distname &&					\
		ln -s . $$distname &&					\
		files='' &&						\
		for i in $(PARSER_DIST_FILES); do			\
			files="$$files $$distname/$$i";			\
		done &&							\
	        tar cf - $$files | $(GZIP) --best >$$distfile &&	\
		rm $$distname;						\
	else								\
		echo "Can't write $$distfile" >&2;			\
		exit 1;							\
	fi

